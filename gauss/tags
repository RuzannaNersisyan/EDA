!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
A	System.hpp	/^	std::vector<std::vector<double> > A;$/;"	m	class:System
Initialize	System.cpp	/^void System::Initialize(unsigned num1)$/;"	f	class:System
Initialize	System.cpp	/^void System::Initialize(unsigned num1,unsigned  num2)$/;"	f	class:System
System	System.hpp	/^        System() {}$/;"	f	class:System
System	System.hpp	/^class System {$/;"	c
SystemColumns	System.hpp	/^	unsigned SystemColumns;$/;"	m	class:fileReader
SystemColumns	System.hpp	/^	unsigned SystemColumns;$/;"	m	class:fileWriter
SystemCounter	System.hpp	/^	unsigned SystemCounter;$/;"	m	class:fileWriter
SystemNumber	System.hpp	/^	unsigned SystemNumber;$/;"	m	class:System
SystemRows	System.hpp	/^	unsigned SystemRows;$/;"	m	class:fileReader
SystemRows	System.hpp	/^	unsigned SystemRows;$/;"	m	class:fileWriter
b	System.hpp	/^	std::vector<double> b;$/;"	m	class:System
backwordStep	gauss.cpp	/^void backwordStep(System& A, System& b) {$/;"	f
check	gauss.cpp	/^bool check(System& A, System& b) {$/;"	f
columns	System.hpp	/^	unsigned columns;$/;"	m	class:System
count	gauss.cpp	/^unsigned count = 0;$/;"	v
elemReading	System.cpp	/^bool fileReader::elemReading(double& num) {$/;"	f	class:fileReader
fileReader	System.cpp	/^fileReader::fileReader(const char* fn)$/;"	f	class:fileReader
fileReader	System.hpp	/^class fileReader {$/;"	c
fileWriter	System.cpp	/^fileWriter::fileWriter(const char* fn)$/;"	f	class:fileWriter
fileWriter	System.hpp	/^class fileWriter$/;"	c
fin	System.hpp	/^	std::ifstream fin;$/;"	m	class:fileReader
fout	System.hpp	/^	std::ofstream fout;$/;"	m	class:fileWriter
generate_A	generator.cpp	/^void generate_A(const char* fn, int r, int c, unsigned counter) {$/;"	f
generate_b	generator.cpp	/^void generate_b(const char* fn, int r) {$/;"	f
getColumns	System.hpp	/^	unsigned getColumns() const  { return columns; }$/;"	f	class:System
getColumnsValue	System.hpp	/^        unsigned getColumnsValue() { return SystemColumns; }$/;"	f	class:fileReader
getRows	System.hpp	/^	unsigned getRows() const { return rows; }$/;"	f	class:System
getRowsValue	System.hpp	/^	unsigned getRowsValue() { return SystemRows; }$/;"	f	class:fileReader
getStr	System.cpp	/^void fileReader::getStr(std::string str) {$/;"	f	class:fileReader
getSystemCounter	System.hpp	/^	unsigned getSystemCounter() { return SystemCounter; }$/;"	f	class:fileWriter
getSystemNumber	System.hpp	/^	unsigned getSystemNumber() const { return SystemNumber; }$/;"	f	class:System
main	gauss.cpp	/^int main() {$/;"	f
main	generator.cpp	/^int main() {$/;"	f
numReading	System.cpp	/^bool fileReader::numReading(unsigned& num) {$/;"	f	class:fileReader
numWriting	System.cpp	/^bool fileWriter::numWriting(double num) {$/;"	f	class:fileWriter
operator ()	System.cpp	/^const double& System::operator() (unsigned i, unsigned j) const {$/;"	f	class:System
operator ()	System.cpp	/^double& System::operator() (unsigned i, unsigned j) {$/;"	f	class:System
operator []	System.cpp	/^const double& System::operator[] (unsigned i) const {$/;"	f	class:System
operator []	System.cpp	/^double& System::operator[] (unsigned i) {$/;"	f	class:System
readSystem	System.cpp	/^bool readSystem(System& S, System& b, fileReader& fr) {$/;"	f
readerFile	System.hpp	/^	const char* readerFile;$/;"	m	class:fileReader
rows	System.hpp	/^	unsigned rows;$/;"	m	class:System
setColumns	System.hpp	/^	void setColumns(unsigned c) { columns = c; }$/;"	f	class:System
setRows	System.hpp	/^	void setRows(unsigned r) { rows = r; }$/;"	f	class:System
setSystemNumber	System.hpp	/^	void setSystemNumber(unsigned n) { SystemNumber = n; }$/;"	f	class:System
straightStep	gauss.cpp	/^void straightStep(System& A, System& b) {$/;"	f
stringWriting	System.cpp	/^bool fileWriter::stringWriting(std::string str) {$/;"	f	class:fileWriter
symbolReading	System.cpp	/^bool fileReader::symbolReading(char& ch) {$/;"	f	class:fileReader
symbolWriting	System.cpp	/^bool fileWriter::symbolWriting(char ch) {$/;"	f	class:fileWriter
sysNumWriting	System.cpp	/^bool fileWriter::sysNumWriting(unsigned num) {$/;"	f	class:fileWriter
systemCounter	System.cpp	/^void fileWriter::systemCounter() {$/;"	f	class:fileWriter
system_class	System.hpp	2;"	d
writeSystem	System.cpp	/^bool writeSystem (const System& b, fileWriter& fw) {$/;"	f
writerFile	System.hpp	/^        const char * writerFile;$/;"	m	class:fileWriter
~fileReader	System.cpp	/^fileReader::~fileReader(){$/;"	f	class:fileReader
~fileWriter	System.cpp	/^fileWriter::~fileWriter() {$/;"	f	class:fileWriter
